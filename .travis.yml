language: cpp

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "B3qos7kD7Auds9f9sPepJlbqVvNiyyMOAonV5EsFOVN9HObZeNZg1a2OnmRGrQkf2fYU30/bcKsoAptnoPn2ronOwWCh1+HA78WzNixHxSf+SSpwg0ZqOdYsRx7Yz3DunJ1huotmB3ZqVQwuKNzsaCVcQUxw/pnj5GX62v0vggqOl1P6QFMO6OgJDj5AEEaVhbdq5YUk85t7ZIQefM/OXysNaBclG89/s8blC9LoIbDjqtSKbalPPNk5oOd3bMqjUE8M8gIuRRekgzqm35AkHNHQmqLOP8roaWmTYBqZcbo56G/bxFbKA1b+iDTEZqlc4175NTJJWKipdnSAf3aIwIAh6/7fCrTPYs1eFOH6UbSiAbGsuVeh52h+caIJg+LYmR2DUhUYut71SMSqDC7RUTbAkCp1AHHOHknryavmkql6tlctoQhvHniXvN0xW8EGdUaTUYOG4ewctYE2zM8fKg90k18YaXiUrcRrdHhl9iDUos/YdRyYraqVHP9jC8iqPo3u/flZ+onyk07zY+shLv5MY9HUvvcCVTotMw5Xu3oIaZ6FhiNU5KKSxa5qe2pkrw8XsuwkfAnQHrpHFxROjdDErzxu3dysi4WAdVNoPZf6dcjOzc+vbTjJtXEx9RBHFlxseVy81p1HsW8DG1G8aWpV8zld7HYD/ZDgLWKbnoU="

matrix:
  include:
#    - os: linux
#      env:
#        NAME: "Qt 4"
    - os: linux
      env:
        NAME: "Qt 5.8"
      addons:
        apt:
          sources:
            - sourceline: 'ppa:beineri/opt-qt58-trusty'
          packages:
            - qt58base qt58declarative qt58tools
        coverity_scan:
          project:
            name: "rodolforg/fet"
#    build_command_prepend: "./configure; make clean"
          build_command:   "qmake; make -j 2"
          branch_pattern: coverity_scan
      before_install:
        source /opt/qt58/bin/qt58-env.sh
#    - os: linux
#      env:
#        NAME: "Qt 5.2.1"
#      addons:
#        apt:
#          packages:
#            - qt5-qmake qtbase5-dev qtdeclarative5-dev libqt5webkit5-dev libsqlite3-dev
#      before_install:
#        export QMAKE=/usr/lib/x86_64-linux-gnu/qt5/bin/qmake

before_install:
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

script:
  - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then qmake && make -j 4 ; fi

